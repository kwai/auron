<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.blaze</groupId>
  <artifactId>blaze-engine</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>

  <modules>
    <module>spark-version-annotation-macros</module>
    <module>spark-extension</module>
    <module>${shimPkg}</module>
    <module>hadoop-shim</module>
    <module>dev/mvn-build-helper/assembly</module>
    <module>dev/mvn-build-helper/proto</module>
  </modules>

  <properties>
    <revision>5.0.0-SNAPSHOT</revision>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <arrowVersion>16.0.0</arrowVersion>
    <protobufVersion>3.21.9</protobufVersion>
    <paimonVersion>1.1.1</paimonVersion>
    <celebornVersion>0.6.0</celebornVersion>
    <celebornScope>provided</celebornScope>
    <uniffleVersion>0.9.2</uniffleVersion>
    <uniffleScope>provided</uniffleScope>

    <javaVersion>8</javaVersion>
    <maven.version>3.8.1</maven.version>
    <maven.plugin.scala.version>4.9.2</maven.plugin.scala.version>
    <maven.plugin.shade.version>3.5.2</maven.plugin.shade.version>
    <os-maven-plugin.version>1.7.1</os-maven-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${scalaLongVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-compiler</artifactId>
        <version>${scalaLongVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-reflect</artifactId>
        <version>${scalaLongVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-core_${scalaVersion}</artifactId>
        <version>${sparkVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-hive_${scalaVersion}</artifactId>
        <version>${sparkVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-sql_${scalaVersion}</artifactId>
        <version>${sparkVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.paimon</groupId>
        <artifactId>paimon-core</artifactId>
        <version>${paimonVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.arrow</groupId>
        <artifactId>arrow-c-data</artifactId>
        <version>${arrowVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.arrow</groupId>
        <artifactId>arrow-compression</artifactId>
        <version>${arrowVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.arrow</groupId>
        <artifactId>arrow-memory-unsafe</artifactId>
        <version>${arrowVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.arrow</groupId>
        <artifactId>arrow-vector</artifactId>
        <version>${arrowVersion}</version>
      </dependency>
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>${protobufVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_${scalaVersion}</artifactId>
        <version>${scalaTestVersion}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-core_${scalaVersion}</artifactId>
        <version>${sparkVersion}</version>
        <type>test-jar</type>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-catalyst_${scalaVersion}</artifactId>
        <version>${sparkVersion}</version>
        <type>test-jar</type>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.apache.arrow</groupId>
            <artifactId>arrow-memory-netty</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-sql_${scalaVersion}</artifactId>
        <version>${sparkVersion}</version>
        <type>test-jar</type>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <!-- compile java -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.version}</version>
        <configuration>
          <source>${javaVersion}</source>
          <target>${javaVersion}</target>
        </configuration>
      </plugin>

      <!-- compile scala -->
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>${maven.plugin.scala.version}</version>
        <configuration>
          <source>${javaVersion}</source>
          <target>${javaVersion}</target>
          <scalaVersion>${scalaLongVersion}</scalaVersion>
          <args>
            <arg>-Ywarn-unused</arg>
          </args>
          <jvmArgs>
            <jvmArg>-Dblaze.shim=${shimName}</jvmArg>
          </jvmArgs>
          <compilerPlugins>
            <compilerPlugin>
              <groupId>org.scalameta</groupId>
              <artifactId>semanticdb-scalac_${scalaLongVersion}</artifactId>
              <version>4.8.1</version>
            </compilerPlugin>
            <compilerPlugin>
              <groupId>org.scalamacros</groupId>
              <artifactId>paradise_${scalaLongVersion}</artifactId>
              <version>2.1.1</version>
            </compilerPlugin>
          </compilerPlugins>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>2.0.2</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>scala-compile-first</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <phase>process-resources</phase>
          </execution>
          <execution>
            <id>scala-test-compile</id>
            <goals>
              <goal>testCompile</goal>
            </goals>
            <phase>process-test-resources</phase>
          </execution>
        </executions>
      </plugin>

      <!-- directory plugin -->
      <plugin>
        <groupId>org.commonjava.maven.plugins</groupId>
        <artifactId>directory-maven-plugin</artifactId>
        <version>0.1</version>
        <executions>
          <execution>
            <id>directories</id>
            <goals>
              <goal>highest-basedir</goal>
            </goals>
            <phase>initialize</phase>
            <configuration>
              <property>rootDir</property>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- spotless -->
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>2.30.0</version>
        <configuration>
          <java>
            <palantirJavaFormat />
            <removeUnusedImports />
            <licenseHeader>
              <file>${session.executionRootDirectory}/dev/license-header</file>
            </licenseHeader>
          </java>
          <scala>
            <scalafmt>
              <version>${scalafmtVersion}</version>
              <file>${session.executionRootDirectory}/scalafmt.conf</file>
              <scalaMajorVersion>${scalaVersion}</scalaMajorVersion>
            </scalafmt>
            <licenseHeader>
              <file>${session.executionRootDirectory}/dev/license-header</file>
            </licenseHeader>
          </scala>
          <pom>
            <sortPom>
              <encoding>UTF-8</encoding>
              <lineSeparator>${line.separator}</lineSeparator>
              <expandEmptyElements>false</expandEmptyElements>
              <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>
              <keepBlankLines>true</keepBlankLines>
              <nrOfIndentSpace>2</nrOfIndentSpace>
              <indentBlankLines>false</indentBlankLines>
              <indentSchemaLocation>false</indentSchemaLocation>
              <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
              <sortOrderFile />
              <sortDependencies />
              <sortDependencyExclusions />
              <sortPlugins />
              <sortProperties>false</sortProperties>
              <sortModules>false</sortModules>
              <sortExecutions>false</sortExecutions>
            </sortPom>
          </pom>
        </configuration>
        <executions>
          <execution>
            <id>scalafix</id>
            <goals>
              <goal>apply</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>

      <!-- scalafix -->
      <plugin>
        <groupId>io.github.evis</groupId>
        <artifactId>scalafix-maven-plugin_${scalaVersion}</artifactId>
        <version>0.1.4_0.9.31</version>
        <configuration>
          <config>${session.executionRootDirectory}/scalafix.conf</config>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.nequissimus</groupId>
            <artifactId>sort-imports_${scalaVersion}</artifactId>
            <version>0.6.1</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>scalafix</id>
            <goals>
              <goal>scalafix</goal>
            </goals>
            <phase>prepare-package</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>release</id>
      <properties>
        <releaseMode>release</releaseMode>
        <buildNativeWithRelease>true</buildNativeWithRelease>
        <buildWithFeatures />
      </properties>
    </profile>

    <profile>
      <id>release-with-jemalloc-pprof</id>
      <properties>
        <releaseMode>release</releaseMode>
        <buildNativeWithRelease>true</buildNativeWithRelease>
        <buildWithFeatures>jemalloc-pprof</buildWithFeatures>
      </properties>
    </profile>

    <profile>
      <id>pre</id>
      <properties>
        <releaseMode>pre</releaseMode>
        <buildNativeWithRelease>false</buildNativeWithRelease>
        <buildWithFeatures />
      </properties>
    </profile>

    <profile>
      <id>spark-3.0</id>
      <properties>
        <shimName>spark-3.0</shimName>
        <shimPkg>spark-extension-shims-spark3</shimPkg>
        <scalaVersion>2.12</scalaVersion>
        <scalaLongVersion>2.12.17</scalaLongVersion>
        <scalaTestVersion>3.0.8</scalaTestVersion>
        <scalafmtVersion>3.0.0</scalafmtVersion>
        <sparkVersion>3.0.3</sparkVersion>
      </properties>
    </profile>

    <profile>
      <id>spark-3.1</id>
      <properties>
        <shimName>spark-3.1</shimName>
        <shimPkg>spark-extension-shims-spark3</shimPkg>
        <scalaVersion>2.12</scalaVersion>
        <scalaLongVersion>2.12.15</scalaLongVersion>
        <scalaTestVersion>3.2.9</scalaTestVersion>
        <scalafmtVersion>3.0.0</scalafmtVersion>
        <sparkVersion>3.1.3</sparkVersion>
      </properties>
    </profile>

    <profile>
      <id>spark-3.2</id>
      <properties>
        <shimName>spark-3.2</shimName>
        <shimPkg>spark-extension-shims-spark3</shimPkg>
        <scalaVersion>2.12</scalaVersion>
        <scalaLongVersion>2.12.15</scalaLongVersion>
        <scalaTestVersion>3.2.9</scalaTestVersion>
        <scalafmtVersion>3.0.0</scalafmtVersion>
        <sparkVersion>3.2.4</sparkVersion>
      </properties>
    </profile>

    <profile>
      <id>spark-3.3</id>
      <properties>
        <shimName>spark-3.3</shimName>
        <shimPkg>spark-extension-shims-spark3</shimPkg>
        <scalaVersion>2.12</scalaVersion>
        <scalaLongVersion>2.12.15</scalaLongVersion>
        <scalaTestVersion>3.2.9</scalaTestVersion>
        <scalafmtVersion>3.0.0</scalafmtVersion>
        <sparkVersion>3.3.4</sparkVersion>
      </properties>
    </profile>

    <profile>
      <id>spark-3.4</id>
      <properties>
        <shimName>spark-3.4</shimName>
        <shimPkg>spark-extension-shims-spark3</shimPkg>
        <scalaVersion>2.12</scalaVersion>
        <scalaLongVersion>2.12.15</scalaLongVersion>
        <scalaTestVersion>3.2.9</scalaTestVersion>
        <scalafmtVersion>3.0.0</scalafmtVersion>
        <sparkVersion>3.4.4</sparkVersion>
      </properties>
    </profile>

    <profile>
      <id>spark-3.5</id>
      <properties>
        <shimName>spark-3.5</shimName>
        <shimPkg>spark-extension-shims-spark3</shimPkg>
        <scalaVersion>2.12</scalaVersion>
        <scalaLongVersion>2.12.15</scalaLongVersion>
        <scalaTestVersion>3.2.9</scalaTestVersion>
        <scalafmtVersion>3.0.0</scalafmtVersion>
        <sparkVersion>3.5.6</sparkVersion>
      </properties>
    </profile>

    <profile>
      <id>jdk-8</id>
      <activation>
        <jdk>1.8</jdk>
      </activation>
      <properties>
        <javaVersion>8</javaVersion>
      </properties>
    </profile>

    <profile>
      <id>jdk-11</id>
      <activation>
        <jdk>11</jdk>
      </activation>
      <properties>
        <javaVersion>11</javaVersion>
      </properties>
    </profile>

    <profile>
      <id>jdk-17</id>
      <activation>
        <jdk>17</jdk>
      </activation>
      <properties>
        <javaVersion>17</javaVersion>
      </properties>
    </profile>
  </profiles>
</project>
