#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: TPC-DS Reusable

on:
  workflow_call:
    inputs:
      sparkver:
        required: true
        type: string
      sparkurl:
        required: true
        type: string
      javaver:
        required: false
        type: string
        default: '8'
      scalaver:
        required: false
        type: string
        default: '2.12'

jobs:
  build-validator:
    name: Build Validator
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v4
        id: cache-tpcds-validator
        with:
          key: tpcds-validator_${{ inputs.scalaver }}
          path: target/tpcds-validator_${{ inputs.scalaver }}-0.1.0-SNAPSHOT-with-dependencies.jar

      - uses: actions/checkout@v4
        if: steps.cache-tpcds-validator.outputs.cache-hit != 'true'
        with:
          repository: blaze-init/tpcds-validator

      - uses: actions/setup-java@v4
        if: steps.cache-tpcds-validator.outputs.cache-hit != 'true'
        with:
          distribution: 'adopt-hotspot'
          java-version: ${{ inputs.javaver }}
          cache: 'maven'

      - name: Build
        if: steps.cache-tpcds-validator.outputs.cache-hit != 'true'
        run: ./build/mvn package -DskipTests -Pscala-${{ inputs.scalaver }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tpcds-validator-${{ inputs.sparkver }}_${{ inputs.scalaver }}-jdk-${{ inputs.javaver }}
          path: target/tpcds-validator_${{ inputs.scalaver }}-0.1.0-SNAPSHOT-with-dependencies.jar
          overwrite: true

  build-auron-jar:
    name: Build Auron JAR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt-hotspot'
          java-version: ${{ inputs.javaver }}
          cache: 'maven'

      - uses: arduino/setup-protoc@v2
        with:
          version: "21.7"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags: --allow warnings -C target-feature=+aes
          components:
            cargo
            rustfmt

      - name: Rustfmt Check
        uses: actions-rust-lang/rustfmt@v1

      - name: Cargo test
        run: |
          cargo --version
          cargo test --workspace --all-features

      - name: Build ${{ inputs.sparkver }}_${{ inputs.scalaver }} jdk-${{ inputs.javaver }}
        run: |
          sed -i 's/opt-level = 1/opt-level = 0/g' Cargo.toml # use opt-level 0
          rm -f .build-checksum_*.cache
          ./build/mvn package -Ppre -P${{ inputs.sparkver }} -Pscala-${{ inputs.scalaver }} -Pjdk-${{ inputs.javaver }}

      - name: Upload ${{ inputs.sparkver }}_${{ inputs.scalaver }} jdk-${{ inputs.javaver }}
        uses: actions/upload-artifact@v4
        with:
          name: auron-${{ inputs.sparkver }}_${{ inputs.scalaver }}-jdk-${{ inputs.javaver }}
          path: target/auron-${{ inputs.sparkver }}_${{ inputs.scalaver }}-pre-*-SNAPSHOT.jar
          overwrite: true

  run-tpcds-test:
    name: Run TPC-DS test ${{ matrix.query }}
    needs: [build-validator, build-auron-jar]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        query: [
          'q1,q2,q3,q4,q5,q6,q7,q8,q9',
          'q10,q11,q12,q13,q14a,q14b,q15,q16,q17,q18,q19',
          'q20,q21,q22,q23a,q23b,q24a,q24b,q25,q26,q27,q28,q29',
          'q31,q33,q34,q35,q36,q37,q38,q39a,q39b',
          'q40,q41,q42,q43,q44,q45,q46,q47,q48,q49',
          'q50,q51,q52,q53,q54,q55,q56,q57,q58,q59',
          'q60,q61,q62,q63,q64,q65,q66,q67,q68,q69',
          'q70,q71,q72,q73,q74,q75,q76,q77,q78,q79',
          'q80,q81,q82,q83,q84,q85,q86,q87,q88,q89',
          'q90,q91,q92,q93,q94,q95,q96,q97,q98,q99'
        ]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        id: cache-spark-bin
        with:
          path: spark-bin-${{ inputs.sparkver }}_${{ inputs.scalaver }}
          key: spark-bin-${{ inputs.sparkver }}_${{ inputs.scalaver }}

      - name: Setup ${{ inputs.sparkver }}
        id: setup-spark-bin
        if: steps.cache-spark-bin.outputs.cache-hit != 'true'
        run: |
          wget -c ${{ inputs.sparkurl }}
          mkdir -p spark-bin-${{ inputs.sparkver }}_${{ inputs.scalaver }}
          cd spark-bin-${{ inputs.sparkver }}_${{ inputs.scalaver }} && tar -xf ../spark-*.tgz --strip-component=1

      - uses: actions/download-artifact@v4
        with:
          name: auron-${{ inputs.sparkver }}_${{ inputs.scalaver }}-jdk-${{ inputs.javaver }}

      - uses: actions/download-artifact@v4
        with:
          name: tpcds-validator-${{ inputs.sparkver }}_${{ inputs.scalaver }}-jdk-${{ inputs.javaver }}

      - name: Checkout TPC-DS Data
        uses: actions/checkout@v4
        with:
          repository: blaze-init/tpcds_1g
          path: dev/tpcds_1g

      - name: Install Auron JAR
        run: |
          ls -la
          cp auron-*${{ inputs.sparkver }}_${{ inputs.scalaver }}*.jar spark-bin-${{ inputs.sparkver }}_${{ inputs.scalaver }}/jars/

      - uses: actions/setup-java@v4
        with:
          distribution: 'adopt-hotspot'
          java-version: ${{ inputs.javaver }}
          cache: 'maven'

      - name: Run
        run: |
          ls -la
          export RUST_LOG=ERROR
          export RUST_BACKTRACE=1
          export SCALA_VERSION=${{ inputs.scalaver }}
          SPARK_HOME=spark-bin-${{ inputs.sparkver }}_${{ inputs.scalaver }} dev/run-tpcds-test \
            --data-location dev/tpcds_1g \
            --query-filter ${{ matrix.query }}
